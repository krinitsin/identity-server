// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"identityserver/pkg/models/rest"
)

// RegistrationCreatedCode is the HTTP code returned for type RegistrationCreated
const RegistrationCreatedCode int = 201

/*RegistrationCreated User created

swagger:response registrationCreated
*/
type RegistrationCreated struct {
}

// NewRegistrationCreated creates RegistrationCreated with default headers values
func NewRegistrationCreated() *RegistrationCreated {

	return &RegistrationCreated{}
}

// WriteResponse to the client
func (o *RegistrationCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// RegistrationConflictCode is the HTTP code returned for type RegistrationConflict
const RegistrationConflictCode int = 409

/*RegistrationConflict Username already exists

swagger:response registrationConflict
*/
type RegistrationConflict struct {

	/*
	  In: Body
	*/
	Payload *rest.Error `json:"body,omitempty"`
}

// NewRegistrationConflict creates RegistrationConflict with default headers values
func NewRegistrationConflict() *RegistrationConflict {

	return &RegistrationConflict{}
}

// WithPayload adds the payload to the registration conflict response
func (o *RegistrationConflict) WithPayload(payload *rest.Error) *RegistrationConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the registration conflict response
func (o *RegistrationConflict) SetPayload(payload *rest.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegistrationConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*RegistrationDefault Internal server error

swagger:response registrationDefault
*/
type RegistrationDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *rest.Error `json:"body,omitempty"`
}

// NewRegistrationDefault creates RegistrationDefault with default headers values
func NewRegistrationDefault(code int) *RegistrationDefault {
	if code <= 0 {
		code = 500
	}

	return &RegistrationDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the registration default response
func (o *RegistrationDefault) WithStatusCode(code int) *RegistrationDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the registration default response
func (o *RegistrationDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the registration default response
func (o *RegistrationDefault) WithPayload(payload *rest.Error) *RegistrationDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the registration default response
func (o *RegistrationDefault) SetPayload(payload *rest.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegistrationDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
