// Code generated by go-swagger; DO NOT EDIT.

package private

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"identityserver/pkg/models/rest"
)

// SetIdentityOKCode is the HTTP code returned for type SetIdentityOK
const SetIdentityOKCode int = 200

/*SetIdentityOK Identity assigned

swagger:response setIdentityOK
*/
type SetIdentityOK struct {
}

// NewSetIdentityOK creates SetIdentityOK with default headers values
func NewSetIdentityOK() *SetIdentityOK {

	return &SetIdentityOK{}
}

// WriteResponse to the client
func (o *SetIdentityOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SetIdentityUnauthorizedCode is the HTTP code returned for type SetIdentityUnauthorized
const SetIdentityUnauthorizedCode int = 401

/*SetIdentityUnauthorized Authentication information is missing or invalid

swagger:response setIdentityUnauthorized
*/
type SetIdentityUnauthorized struct {
	/*

	 */
	WWWAuthenticate string `json:"WWW_Authenticate"`
}

// NewSetIdentityUnauthorized creates SetIdentityUnauthorized with default headers values
func NewSetIdentityUnauthorized() *SetIdentityUnauthorized {

	return &SetIdentityUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the set identity unauthorized response
func (o *SetIdentityUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *SetIdentityUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the set identity unauthorized response
func (o *SetIdentityUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WriteResponse to the client
func (o *SetIdentityUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// SetIdentityConflictCode is the HTTP code returned for type SetIdentityConflict
const SetIdentityConflictCode int = 409

/*SetIdentityConflict Ethereum address is already assigned to another identity

swagger:response setIdentityConflict
*/
type SetIdentityConflict struct {

	/*
	  In: Body
	*/
	Payload *rest.Error `json:"body,omitempty"`
}

// NewSetIdentityConflict creates SetIdentityConflict with default headers values
func NewSetIdentityConflict() *SetIdentityConflict {

	return &SetIdentityConflict{}
}

// WithPayload adds the payload to the set identity conflict response
func (o *SetIdentityConflict) WithPayload(payload *rest.Error) *SetIdentityConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set identity conflict response
func (o *SetIdentityConflict) SetPayload(payload *rest.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetIdentityConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*SetIdentityDefault Internal server error

swagger:response setIdentityDefault
*/
type SetIdentityDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *rest.Error `json:"body,omitempty"`
}

// NewSetIdentityDefault creates SetIdentityDefault with default headers values
func NewSetIdentityDefault(code int) *SetIdentityDefault {
	if code <= 0 {
		code = 500
	}

	return &SetIdentityDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the set identity default response
func (o *SetIdentityDefault) WithStatusCode(code int) *SetIdentityDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the set identity default response
func (o *SetIdentityDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the set identity default response
func (o *SetIdentityDefault) WithPayload(payload *rest.Error) *SetIdentityDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set identity default response
func (o *SetIdentityDefault) SetPayload(payload *rest.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetIdentityDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
